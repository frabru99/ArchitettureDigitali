$date
  Tue Oct 03 13:17:38 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 16 ! input_16_1[0:15] $end
$var reg 4 " control_16_1[0:3] $end
$var reg 1 # y_16_1 $end
$scope module dut $end
$var reg 16 $ input_16_1[0:15] $end
$var reg 4 % control_16_1[0:3] $end
$var reg 1 & y_16_1 $end
$var reg 4 ' outputs[0:3] $end
$scope module mux0 $end
$var reg 4 ( input_4_1[0:3] $end
$var reg 2 ) control_4_1[0:1] $end
$var reg 1 * y_4_1 $end
$upscope $end
$scope module mux1 $end
$var reg 4 + input_4_1[0:3] $end
$var reg 2 , control_4_1[0:1] $end
$var reg 1 - y_4_1 $end
$upscope $end
$scope module mux2 $end
$var reg 4 . input_4_1[0:3] $end
$var reg 2 / control_4_1[0:1] $end
$var reg 1 0 y_4_1 $end
$upscope $end
$scope module mux3 $end
$var reg 4 1 input_4_1[0:3] $end
$var reg 2 2 control_4_1[0:1] $end
$var reg 1 3 y_4_1 $end
$upscope $end
$scope module mux4 $end
$var reg 4 4 input_4_1[0:3] $end
$var reg 2 5 control_4_1[0:1] $end
$var reg 1 6 y_4_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000000000000000 !
b0000 "
0#
b0000000000000000 $
b0000 %
0&
b0000 '
b0000 (
b00 )
0*
b0000 +
b00 ,
0-
b0000 .
b00 /
00
b0000 1
b00 2
03
b0000 4
b00 5
06
#10000000
b1000000000000000 !
1#
b1000000000000000 $
1&
b1000 '
b1000 (
1*
b1000 4
16
#20000000
b0000000100000000 !
b1110 "
1#
b0000000100000000 $
b1110 %
1&
b0100 '
b0000 (
b11 )
0*
b0001 +
b11 ,
1-
b11 /
b11 2
b0100 4
b10 5
16
#30000000
b0000000000000001 !
b1111 "
1#
b0000000000000001 $
b1111 %
1&
b0001 '
b0000 +
0-
b0001 1
13
b0001 4
b11 5
16
#40000000
